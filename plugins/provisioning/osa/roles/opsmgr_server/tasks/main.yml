---

    # register this target in opsmgr

    - name: clear resources if they already exist
      shell: >
          opsmgr remove_resource -l "{{ item }}"
      with_items: "{{ groups['hosts'] }}"
      ignore_errors: true

    - name: register resource in opsmgr (activate monitoring)
      shell: >
          opsmgr add_resource -l "{{ item }}" -a "{{ hostvars[item].ansible_ssh_host }}"
          -u "{{ ansible_ssh_user }}" --key "/etc/opsmgr/opsmgr.key"
      with_items: "{{ groups['hosts'] }}"

    - name: register host resource role in opsmgr
      shell: >
          opsmgr add_role -l "{{ item }}" -r "osa_host"
      with_items: "{{ groups['hosts'] }}"

    - name: register controller resource role in opsmgr
      shell: >
          opsmgr add_role -l "{{ item }}" -r "osa_controller"
      with_items: "{{ groups['os-infra_hosts'] }}"

    - name: register compute resource role in opsmgr
      shell: >
          opsmgr add_role -l "{{ item }}" -r "osa_compute"
      with_items: "{{ groups['compute_hosts'] }}"

    - name: register cinder storage resource role in opsmgr
      shell: >
          opsmgr add_role -l "{{ item }}" -r "osa_cinder"
      when: |
          item in groups['cinder_volume'] and
          item in groups['cinder_backup']
      with_items: "{{ groups['storage-infra_hosts'] }}"

    - name: register container resource roles in opsmgr
      shell: >
          opsmgr add_role -l "{{ hostvars[item].physical_host }}" -r "osa_{{ hostvars[item].component }}"
      when: |
          hostvars[item].component in osa_services
      with_items: "{{ groups['all_containers'] }}"


