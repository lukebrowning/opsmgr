---

- hosts: all
  become: true
  vars_files:
    - defaults.yml
  vars:
    - roles:
        - osa

  pre_tasks:

    - local_action: command uname -r
      register: uname
      
    - set_fact:
          ansible_kernel: "{{ uname.stdout | replace('\"', '') }}"
  
    - local_action: command ./scripts/osrel.sh
      register: osrel

    - set_fact:
          ostag: "{{ osrel.stdout | replace('\"', '') }}"
  
    - set_fact:
          openstack_release: "{{ ostag }}"

  tasks:
  
    - name: clone this playbook to osa deployer for re-execution
      synchronize: src=./ dest=/tmp/osa/ mode=push
    
    - name: execute remote playbook
      command: /tmp/osa/scripts/rplay.sh
    
    - name: ensures ext exists
      file: path=ext mode=0755 state=directory

    - name: retrieve remote execution log file
      fetch: src=/tmp/osa/ansible.log dest=remote.log flat=yes
      
    - name: retrieve generated vars.yml file
      fetch: src=/tmp/osa/osa_vars.yml dest=ext/overrides.yml flat=yes

    - name: retrieve osa groups file
      fetch: src=/tmp/osa/osa_groups.json dest=ext/ flat=yes

    - name: retrieve osa user secrets
      fetch: src=/etc/openstack_deploy/user_secrets.yml dest=ext/user_secrets.yml flat=yes

    - name: retrieve osa ips hosts
      fetch: src=/opt/openstack-ansible/playbooks/inventory/group_vars/hosts.yml dest=ext/hosts.yml flat=yes

    - name: retrieve osa ips file
      fetch: src=/etc/openstack_deploy/openstack_hostnames_ips.yml dest=ext/osa_ips.json flat=yes

    - name: retrieve osa inventory file
      fetch: src=/etc/openstack_deploy/openstack_inventory.json dest=/tmp/osa_inv.json flat=yes

    - name: fix inventory file for import
      local_action: command ./scripts/osfix.sh
    
    - name: imports osa user secrets
      include_vars: ext/user_secrets.yml

    - name: imports osa hosts
      include_vars: ext/hosts.yml

    - name: imports osa inventory
      include_vars: ext/osa_inv.json
    
    - name: generate opsmgr inventory file from osa hosts
      local_action: template src=templates/inventory.j2 dest=ext/inventory

    - name: ensures opsmgr/ext exists
      file: path={{ opsmgr_dir }}/ext mode=0755 state=directory

    - name: copy all generated data to opsmgr/ext for sharing
      local_action: copy src={{ item }} dest={{ opsmgr_dir }}/ext mode=0644
      with_fileglob:
          - ext/*
    
    - name: ensures /etc/opsmgr exists
      file: path=/etc/opsmgr owner=root group=root mode=0755 state=directory

    - name: drop .spec file in deployer to denote this is osa
      template: src=./templates/.spec.j2 dest=/etc/opsmgr/.spec owner=root group=root mode=0644
          
    - name: remove temp files
      file: path=/tmp/osa/ state=absent


