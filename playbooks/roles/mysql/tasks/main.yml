---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # install pre-reqs

    - name: installs prereq packages with aptitude
      apt: name={{ item }} state=present update_cache=true
      retries: 5
      delay: 2
      with_items: "{{ apt_packages }}"

    # configure service
    
    - name: change bind address to allow remote connections
      lineinfile:
        dest: "/etc/mysql/my.cnf"
        regexp: "^bind-address"
        line: "#bind-address = 127.0.0.1"
      notify:
        - restart service

    - name: update mysql root user
      mysql_user:
        host: "{{ item }}"
        name: "{{ mysql_root_user }}"
        password: "{{ mysql_root_password }}"
        state: present
        priv: "*.*:ALL,GRANT"
      with_items:
        - "%"
        - "{{ inventory_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: create root .my.cnf file
      template:
        src: "my.cnf.j2"
        dest: "~/.my.cnf"
        owner: root
        group: root
        mode: 0600
      notify:
        - restart service


    - name: create remote login user
      mysql_user:
        host: "{{ item }}"
        name: "{{ db_login_user }}"
        password: "{{ db_login_password }}"
        state: "present"
        priv: "*.*:ALL,GRANT"
      with_items:
        - "%"
        - "{{ inventory_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: create haproxy monitoring user
      mysql_user:
        host: "{{ item }}"
        name: "monitoring"
        state: "present"
        password: ""
      with_items:
        - "10.0.3.1"


    - name: Remove the test database
      mysql_db: name=test state=absent
      notify:
        - restart service
      ignore_errors: yes # might not exist


