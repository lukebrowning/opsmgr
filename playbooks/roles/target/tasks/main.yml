---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # determine spefic playbook to be applied to this target
    
    - name: fetch remote spec file
      fetch: src=/etc/opsmgr/.spec dest=ext/spec-{{ inventory_hostname }}.yml flat=yes
    
    - name: load variables from spec file
      include_vars: "ext/spec-{{ inventory_hostname }}.yml"
    
    - debug: var=opsmgr_spec
    
    - name: check if provisioning plays exist for specs
      become: false
      local_action: stat path={{ opsmgr_dir }}/plugins/provisioning/{{ item }}/site.yml
      with_items: "{{ opsmgr_spec }}"
      register: spec_plays
    
    - debug: var=spec_plays
    
    # prepare data to pass along to target playbook
    
    - name: copy spec vars file
      become: false
      copy:
          src:  "{{ opsmgr_dir }}/ext/shared.yml"
          dest: "{{ playbook_dir }}/ext/vars-{{ inventory_hostname }}.yml"
      delegate_to: localhost

    - name: add target host
      become: false
      lineinfile:
          dest: "{{ playbook_dir }}/ext/vars-{{ inventory_hostname }}.yml"
          line: "target: {{ inventory_hostname }}"
          state: present
      delegate_to: localhost

    - name: add opsmgr server variable
      become: false
      lineinfile:
          dest: "{{ playbook_dir }}/ext/vars-{{ inventory_hostname }}.yml"
          line: "opsmgr_servers:"
          state: present
      delegate_to: localhost

    - name: add opsmgr server hostnames
      become: false
      lineinfile:
          dest: "{{ playbook_dir }}/ext/vars-{{ inventory_hostname }}.yml"
          line: "  - {{ item }}"
          state: present
      with_items: "{{ groups.opsmgr_core }}"
      delegate_to: localhost

    - name: clean spec play files
      become: false
      file:
          path: "{{ playbook_dir }}/ext/play-{{ item.item }}-{{ inventory_hostname }}.sh"
          state: absent
      with_items: spec_plays.results
      delegate_to: localhost

    - name: create spec play files
      become: false
      template:
          src: spec.play.j2
          dest: "{{ playbook_dir }}/ext/play-{{ item.item }}-{{ inventory_hostname }}.sh"
          mode: 0755
      with_items: spec_plays.results
      delegate_to: localhost
      
    # call target plugin provisioning playbook

    - name: spawns spec play calls (go grab a coffee!)
      become: true
      local_action: shell "{{ playbook_dir }}/ext/play-{{ item.item }}-{{ inventory_hostname }}.sh"
      args:
          chdir: "{{ opsmgr_dir }}/plugins/provisioning/{{ item.item }}/"
      with_items: spec_plays.results
      when: item.stat.exists == true
      register: play_output
    
    - name: show output of role-specific integration playbooks
      debug: var=play_output.results


