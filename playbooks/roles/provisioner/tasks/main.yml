---
# Copyright 2016, IBM US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

    # sets up ssh keys and configuration
    
    - name: ensure .ssh directory exists
      file:
        path: ~/.ssh
        state: directory
        mode: 0700
    
    - name: check if ssh key file exists
      stat:
          path: "~/.ssh/{{ item }}"
      with_items:
        - id_rsa
        - id_rsa.pub
      register: user_keys
    
    - debug: var=user_keys

    - name: decide if we use user's keys or not
      set_fact:
        use_user_keys: "{{ user_keys.results[0].stat.exists and user_keys.results[1].stat.exists }}"
        
    - debug: var=use_user_keys

    - name: ensure keys/current directory exists
      file:
        path: "{{ opsmgr_dir }}/keys/current"
        state: directory
        mode: 0700
    
    - name: copy keys from user
      copy:
        src: "~/.ssh/{{ item.0 }}"
        dest: "{{ opsmgr_dir }}/keys/current/{{ item.1 }}"
        mode: 0600
      with_together:
        - [ 'id_rsa',     'id_rsa.pub' ]
        - [ 'opsmgr.key', 'opsmgr.pub' ]
      when: use_user_keys | bool == true
    
    - name: fallback to use opsmgr master key instead
      copy:
        src: "{{ opsmgr_dir }}/keys/master/{{ item }}"
        dest: "{{ opsmgr_dir }}/keys/current"
        mode: 0600
      with_items:
        - opsmgr.key
        - opsmgr.pub
      when: use_user_keys | bool == false
    
    - name: copy master keys to ~/.ssh if needed
      copy:
        src: "{{ opsmgr_dir }}/keys/current/{{ item.0 }}"
        dest: "~/.ssh/{{ item.1 }}"
        mode: 0600
        backup: yes
      with_together:
        - [ 'opsmgr.key', 'opsmgr.pub' ]
        - [ 'id_rsa',     'id_rsa.pub' ]
      when: use_user_keys | bool == false
    
    # assemble ~/.ssh/config file for proxying through hosts
    
    - name: remove ~/.ssh/config.d directory if it exists
      file:
          path: ~/.ssh/config.d
          state: absent
    
    - name: create ~/.ssh/config.d directory
      file:
          path: ~/.ssh/config.d
          mode: 0700
          state: directory

    - debug: var=ssh_hosts
    - debug: var=ssh_containers
    - debug: var=groups.opsmgr_hosts
    - debug: var=groups.opsmgr_containers

    - name: create ssh config entries for hosts from inventory
      template:
          src: ssh.host.j2
          dest: "~/.ssh/config.d/ssh.host-{{ item }}"
          mode: 0644
      with_items: groups.opsmgr_hosts
      when: groups.opsmgr_hosts is defined

    - name: create ssh config entries for targets from inventory
      template:
          src: ssh.host.j2
          dest: "~/.ssh/config.d/ssh.host-{{ item }}"
          mode: 0644
      with_items: groups.opsmgr_targets
      when: groups.opsmgr_targets is defined

    - name: create ssh config entries for hosts from extravars
      template:
          src: ssh.host.j2
          dest: "~/.ssh/config.d/ssh.host-{{ item }}"
          mode: 0644
      with_items: ssh_hosts
      when: ssh_hosts is defined

    #- debug: var=hostvars[item]
    #  with_items: groups.opsmgr_containers
    #  when: groups.opsmgr_containers is defined

    - name: create ssh config entries for containers from inventory
      template:
          src: ssh.lxc.j2
          dest: "~/.ssh/config.d/ssh.lxc-{{ item.hostname }}"
          mode: 0644
      with_items: opsmgr_containers
      when: opsmgr_containers is defined

    - name: create ssh config entries for containers from extravars
      template:
          src: ssh.lxc.j2
          dest: "~/.ssh/config.d/ssh.lxc-{{ item.hostname }}"
          mode: 0644
      with_items: ssh_containers
      when: ssh_containers is defined

    - name: assemble ~/.ssh/config file
      become: false
      assemble:
          src: ~/.ssh/config.d
          dest: ~/.ssh/config
          backup: yes



