---
# Copyright 2014, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


- name: Deploy Kibana configuration files
  template:
    src: "{{ item }}"
    dest: "/opt/kibana/config/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - kibana.yml
  notify: Restart Kibana
  tags:
    - kibana-post-install

- name: Deploy Kibana service configuration file
  template:
    src: "{{ item }}"
    dest: "/etc/default/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - kibana
  notify: Restart Kibana
  tags:
    - kibana-post-install

- name: Restart Kibana before proceeding
  meta: flush_handlers

- name: Wait for Kibana port
  wait_for:
    host: "127.0.0.1"
    port: "{{ kibana_app_port }}"
  tags:
    - kibana-post-install

- name: create self-signed SSL cert
  command: >
    openssl req -new -nodes -x509 -subj
    "/C=US/ST=Texas/L=San Antonio/O=IT/CN={{ kibana_server_name }}"
    -days 365
    -keyout /etc/ssl/private/apache.key
    -out /etc/ssl/certs/apache.cert
    -extensions v3_ca
    creates=/etc/ssl/certs/apache.cert
  when: kibana_self_signed is defined and kibana_self_signed == true
  tags:
    - kibana-self-signed-cert
    - kibana-post-install

- name: Enable apache modules
  command: a2enmod "{{ item }}"
  with_items: kibana_apache_modules
  tags:
    - kibana-apache-modules
    - kibana-apache
    - kibana-post-install

- name: Template Kibana Apache Config
  template:
    src: "{{ item }}"
    dest: "/etc/apache2/sites-available/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - 000-kibana.conf
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-post-install

- name: Drop Apache2 Ports File
  template:
    src: "{{ item }}"
    dest: "/etc/apache2/{{ item }}"
    owner: "root"
    group: "root"
  with_items:
    - ports.conf
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-post-install

- name: Link Kibana Site
  file:
    state: "link"
    src: "/etc/apache2/sites-available/000-kibana.conf"
    dest: "/etc/apache2/sites-enabled/000-kibana.conf"
    owner: "root"
    group: "root"
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-post-install

- name: Remove Apache Default Site
  file:
    state: "absent"
    path: "/etc/apache2/sites-enabled/000-default.conf"
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-config

- name: Create kibana http_auth user
  htpasswd:
    path: "/etc/apache2/users"
    name: "kibana"
    password: "{{ kibana_password }}"
    owner: "root"
    group: "www-data"
    mode: "0640"
    create: "yes"
    state: "present"
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-post-install

- name: Create tmp directory for the dashboards
  file:
      path: "{{ kibana_temp_directory }}"
      state: directory
      mode: 0700
  tags:
    - kibana-post-install

- name: copy visualizations and dashboards to server
  synchronize:
       src:  ./
       dest: "{{ kibana_temp_directory }}"
       mode: push
       compress: yes
  tags:
    - kibana-post-install

- name: Import the dashboards
  shell: "./load.sh -l {{ elasticsearch_ip }}:{{ elasticsearch_http_port }}"
  args:
    chdir: "{{ kibana_temp_directory }}"
  notify: Restart Apache
  tags:
    - kibana-apache
    - kibana-post-install

- name: Remove tmp directory for the code
  file:
       path: "{{ kibana_temp_directory }}"
       state: absent
  tags:
    - kibana-post-install
